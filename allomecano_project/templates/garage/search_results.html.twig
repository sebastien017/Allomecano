{% extends 'base.html.twig' %}

{% block title %}Allomecano | Résultat de la recherche{% endblock %}

{% block body %}

<section class="section flex-1 no-padding-top">
<div class="columns is-12 is-multiline has-text-centered">
<div class="column is-12 is-vcentered is-size-5">
<i class="fas fa-search-location mr-1"></i>Résultats à proximité de {{ address }}
</div>
<div class="column is-6">
		<div class="is-sticky">
			<div id="map">
			</div>
		</div>
</div>
<div class="column is-6">
	{% for garage in garages  %}
		<div class="search-garage-infos" data-id="{{ garage.id }}">
		<h3>{{ garage.name }}</h3>
	{% if garage.comments|length > 0 %}
		<p>Note moyenne sur {{ garage.comments|length }} avis :</p>
		{% include 'partials/rating.html.twig' with {'rating': garage.avgRatings } %}
	{% endif %}
		<p>{{ garage.adress }}</p>
		<a href="{{ path('single_garage', {id: garage.id }) }}" class="button is-success mt-1"><i class="fas fa-external-link-alt mr-1"></i> Prendre rendez-vous</a>
		</div>
	{% endfor %}
</div>
</div>
</section>

<script
  src="https://code.jquery.com/jquery-3.4.1.min.js"
  integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
  crossorigin="anonymous"></script>
<script src="https://maps.google.com/maps/api/js?key=AIzaSyAa_XzBtUTRBtVf2yBNiqYhT1bvBJX_Xoo" type="text/javascript"></script>

<script>
		map = new google.maps.Map(document.getElementById("map"), {
		center: new google.maps.LatLng({{ zoomLatitude }}, {{ zoomLongitude }}),
		zoom: 10,
		mapTypeId: google.maps.MapTypeId.ROADMAP,
		mapTypeControl: true,
		scrollwheel: true,
		mapTypeControlOptions: {
			style: google.maps.MapTypeControlStyle.HORIZONTAL_BAR
		},
			navigationControl: true,
			navigationControlOptions: {
			style: google.maps.NavigationControlStyle.ZOOM_PAN
		}
		});

		// Mise en place de geocoder qui permet de récupérer les coordonnées gps par rapport à une adresse
		geocoder = new google.maps.Geocoder();
		var infowindow = new google.maps.InfoWindow();
		// On parcourt l'objet garages
		{% for garage in garages %}
		{
			geocoder.geocode({ 'address': "{{ garage.adress }}" }, function (results, status) 
			{
        		var latLng = {lat: results[0].geometry.location.lat (), lng: results[0].geometry.location.lng ()};

        		if (status == 'OK') 
				{	
					// Ajout du marqueur sur la map
            		var marker{{ garage.id }} = new google.maps.Marker({
                	position: latLng,
                	map: map,
					scaledSize: new google.maps.Size(38, 38),
					icon: {
      					url: "http://maps.google.com/mapfiles/ms/icons/red-dot.png"
    				}
            		});
					// On sélectionne la div dans le DOM correspondant au même id
					let garageDOM = document.body.querySelector('.search-garage-infos[data-id="{{ garage.id }}"]');
					
					// Evenement mouseover sur les div
					garageDOM.addEventListener("mouseover", function()
					{
						marker{{ garage.id }}.setIcon('http://maps.google.com/mapfiles/ms/icons/purple-dot.png');

						garageDOM.classList.add('borderIsBlue');

						map.setCenter(new google.maps.LatLng(latLng));

						map.setZoom(15);
					});

					// Evenement mouseleave sur les div
					garageDOM.addEventListener("mouseleave", function()
					{
						marker{{ garage.id }}.setIcon('http://maps.google.com/mapfiles/ms/icons/red-dot.png');

						garageDOM.classList.remove('borderIsBlue');

						map.setCenter(new google.maps.LatLng({{ zoomLatitude }}, {{ zoomLongitude }}));

						map.setZoom(10);
					});  

					// Ajout d'un evenement click sur le marqueur
					google.maps.event.addListener(marker{{ garage.id }}, 'click', function(){
        			// On cherche dans le DOM l'element en rapport avec l'id du garage actuel
					var div = document.body.querySelector('.search-garage-infos[data-id="{{ garage.id }}"]');
					// On cherche si un des élement dans le DOM possède déjà la classe
					var elements = document.body.querySelectorAll('.search-garage-infos[data-id]').forEach(function (element)
					{
						element.classList.remove('borderIsBlue');
					});
					
					// On ajoute une classe à l'element
					div.classList.add("borderIsBlue");

					// Animation : Scroll jusqu'à la div
					div.scrollIntoView({ behavior: 'smooth' });
					});
        		} 
				else 
				{
            		console.log('Geocode was not successful for the following reason: ' + status);
        		}
    		});
		}

		{% endfor %}
		
</script>

{% endblock %}

